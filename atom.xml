<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>橙BLOG</title>
  
  <subtitle>橙子的BLOG</subtitle>
  <link href="http://chengzi600.github.io/atom.xml" rel="self"/>
  
  <link href="http://chengzi600.github.io/"/>
  <updated>2024-08-15T11:44:34.000Z</updated>
  <id>http://chengzi600.github.io/</id>
  
  <author>
    <name>Chengzi600</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网站简介</title>
    <link href="http://chengzi600.github.io/posts/47685.html"/>
    <id>http://chengzi600.github.io/posts/47685.html</id>
    <published>9999-09-08T16:00:00.000Z</published>
    <updated>2024-08-15T11:44:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><em><strong>「靠自己，实际一些！」</strong></em></p><p>你好啊，这里是橙的个人博客<br>平时分享一些代码和学习类文章<br>左上角按钮可以展开边栏，里面有我的Github和B站信息<br>点击边栏中的头像可以打开留言板，下面的月亮可以切换暗色&#x2F;亮色模式</p><p>欢迎随时来看看~</p><p><img src="https://s2.loli.net/2024/08/15/eGHNjsi4IbSadoq.jpg" alt="图片" loading="lazy"><em>~( ￣□￣)&#x2F;</em></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;「靠自己，实际一些！」&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;你好啊，这里是橙的个人博客&lt;br&gt;平时分享一些代码和学习类文章&lt;br&gt;左上角按钮可以展开边栏，里面有我的Github和B站信息&lt;br&gt;点击边栏中的头像可以打开留言板，下面的月亮可以切换暗色&amp;#x2F;亮色模式&lt;/p&gt;
&lt;p&gt;欢迎随时来看看~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2024/08/15/eGHNjsi4IbSadoq.jpg&quot; alt=&quot;图片&quot;&gt;&lt;em&gt;~( ￣□￣)&amp;#x2F;&lt;/em&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="公告" scheme="http://chengzi600.github.io/categories/%E5%85%AC%E5%91%8A/"/>
    
    
    <category term="个人" scheme="http://chengzi600.github.io/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>英语演讲稿 - My dream</title>
    <link href="http://chengzi600.github.io/posts/12393.html"/>
    <id>http://chengzi600.github.io/posts/12393.html</id>
    <published>2024-08-14T11:54:00.000Z</published>
    <updated>2024-08-15T11:36:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这种垃圾文章应该没人直接原文搬走，我就不强调“仅供学习参考”了</p><p>感谢 <code>ChatGPT 4o</code>对文章提出的修改意见</p></blockquote><p><img src="https://s2.loli.net/2024/08/14/R6MoUhZ18bfIB2G.png" alt="english-chatgpt.png" loading="lazy"></p><p>    Hello, everyone. First, I’m very happy to be here today to share my dream with you.I have a dream that technology will lead us to a better future.<br>    Throughout history, technology has been a symbol of progress. A famous example is the invention of the Internet, which has made it possible to stay connected with others from anywhere in the world.</p><span id="more"></span><p>    I dream of a future with more and more robots. Today there are already robots working in factories. They do simple jobs over and over again. However, I think robots will wake up and be able to talk to us in the future. They will not only be able to cook but also sing and dance.<br>    Besides robots, I dream that one day we’ll find new energy. At that time, there will be almost no pollution in the world. What’s more, the world will be more peaceful as no one will fight over energy.<br>    However, many people think these ideas are impossible, but computers and rockets also seemed impossible 100 years ago. So we never know what will happen in the future. I’ll try my best to study science and never give up. Maybe I will become a scientist and make my own robots.<br>    That’s all for my dream. Wish me luck, thank you!</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这种垃圾文章应该没人直接原文搬走，我就不强调“仅供学习参考”了&lt;/p&gt;
&lt;p&gt;感谢 &lt;code&gt;ChatGPT 4o&lt;/code&gt;对文章提出的修改意见&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2024/08/14/R6MoUhZ18bfIB2G.png&quot; alt=&quot;english-chatgpt.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;    Hello, everyone. First, I’m very happy to be here today to share my dream with you.I have a dream that technology will lead us to a better future.&lt;br&gt;    Throughout history, technology has been a symbol of progress. A famous example is the invention of the Internet, which has made it possible to stay connected with others from anywhere in the world.&lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="http://chengzi600.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="英语" scheme="http://chengzi600.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="作文" scheme="http://chengzi600.github.io/tags/%E4%BD%9C%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>恶魔轮盘赌拆包 - Godot 引擎游戏的逆向</title>
    <link href="http://chengzi600.github.io/posts/38835.html"/>
    <id>http://chengzi600.github.io/posts/38835.html</id>
    <published>2024-02-24T11:30:00.000Z</published>
    <updated>2024-08-15T11:44:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近期网络上也是出现了一款特别火的游戏——<strong>Buckshot Roulette</strong>，也叫恶魔轮盘赌，游戏玩法不多赘述，这里提供 Godot 引擎游戏逆向的一般方法，至于游戏中AI大哥的逻辑，B站上已经有了分析<a href="https://www.bilibili.com/video/BV13z421R73V"># 逆向代码解析恶魔轮盘赌！你想知道的全在这里</a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>游戏是 <strong>Godot</strong> 引擎开发的，Godot 是一个开源引擎，这意味着我们可以很容易地将其反编译，得到项目文件，以此来获得你想要的音频&#x2F;图片资源，甚至对代码进行二次开发</p><p>这里我们用到 Github 上一个开源项目 [<a href="https://github.com/bruvzg/gdsdecomp">GitHub - bruvzg&#x2F;gdsdecomp: Godot reverse engineering tools</a>，该程序支持反编译 Godot 4.x、3.x 和 2.x 项目</p><span id="more"></span><ol><li><p>在 Github 下载最新的 Release，解压</p></li><li><p><code>Buckshot Roulette.exe</code>游戏文件，1.0或1.1版本均可</p></li></ol><h2 id="逆向过程"><a href="#逆向过程" class="headerlink" title="逆向过程"></a>逆向过程</h2><h3 id="获得项目文件"><a href="#获得项目文件" class="headerlink" title="获得项目文件"></a>获得项目文件</h3><ol><li><p>启动<code>gdre_tools.exe</code>，选择<code>RE Tools</code>-<code>Recover Project</code>，在文件选择框中选择下载好的游戏主程序文件<code>Buckshot Roulette.exe</code>，选择输出文件夹并选择<code>Full Project Recovery</code>获得完整项目文件，等待几分钟时间，程序会把整个项目文件提到你选择的文件夹中，期间程序自带的控制台可能报错，不用理会即可</p></li><li><p>完成之后，点开项目文件夹，我们为了在 Godot 中打开项目，需要先看项目版本，用任意编辑器打开<code>project.godot</code>文件</p><pre class="language-systemd" data-language="systemd"><code class="language-systemd"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">application</span><span class="token punctuation">]</span></span><span class="token key attr-name">config/name</span><span class="token punctuation">=</span><span class="token value attr-value"><span class="token quoted">"Buckshot Roulette"</span></span><span class="token key attr-name">run/main_scene</span><span class="token punctuation">=</span><span class="token value attr-value"><span class="token quoted">"res://scenes/menu.tscn"</span></span><span class="token key attr-name">config/features</span><span class="token punctuation">=</span><span class="token value attr-value">PackedStringArray("4.2",</span> "Forward Plus")<span class="token key attr-name">boot_splash/bg_color</span><span class="token punctuation">=</span><span class="token value attr-value">Color(0, 0, 0, 1)</span><span class="token key attr-name">boot_splash/show_image</span><span class="token punctuation">=</span><span class="token value attr-value"><span class="token boolean">false</span></span><span class="token key attr-name">config/icon</span><span class="token punctuation">=</span><span class="token value attr-value"><span class="token quoted">"res://misc/icon1.png"</span></span></code></pre><p>从中不难发现，项目所用的 Godot 版本为<code>4.2</code>，我们到 Godot 官网下载对应的版本，添加项目，选中<code>project.godot</code>文件即可加载</p></li></ol><h3 id="提取资源"><a href="#提取资源" class="headerlink" title="提取资源"></a>提取资源</h3><p>由于大部分人不会 Godot 开发，只是想要获得游戏中的资源，这里简单说明一下资源的提取</p><p>先来观察下目录结构</p><pre class="language-bash" data-language="bash"><code class="language-bash">┌─.assets├─.godot├─.idea├─audio├─fonts├─GodotRetro├─instances├─main player├─materials├─misc├─models├─scenes├─scripts└─textures</code></pre><p>目录结构取决于开发者的习惯，但是大多情况下，一些文件夹的命名和文件的存放原则是一致的，这里说明几个重要文件夹</p><ul><li><p><code>audio</code>存储游戏的音频文件，游戏的音乐、音效都在这里</p></li><li><p><code>fonts</code>存储游戏的字体，该游戏中字体全部是特制的，如有需求可以直接安装<code>.ttf</code>文件（这游戏几套字体都只支持英文字母）</p></li><li><p><code>models</code> <code>textures</code>存储游戏的贴图，能从里面找到很多道具的贴图</p></li><li><p><code>scripts</code>存储游戏中全部代码文件，Godot 开发使用  <em>GDScript</em> 脚本语言，由于 Godot 引擎的特殊性，解包出来的代码中变量名和方法名没有任何变化，甚至注释都完整保留，具有极强的可读性</p><p>我们可以从代码中看出作者对引擎功能的不满以及恶趣味，遗憾的是计算奖金的这个彩蛋没有保留下来</p><pre class="language-gdscript" data-language="gdscript"><code class="language-gdscript"><span class="token comment"># HealthCounter.gd</span><span class="token comment"># Why can I not add functions with arguments into godot animator :sob:</span></code></pre><pre class="language-gdscript" data-language="gdscript"><code class="language-gdscript"><span class="token comment"># EndingManager.gd</span><span class="token keyword">if</span> <span class="token punctuation">(</span>endless_overwriting<span class="token punctuation">)</span><span class="token punctuation">:</span> total_cash <span class="token operator">=</span> endless_score<span class="token comment"># if (playername == "sex"): total_cash = 69</span><span class="token comment"># if (playername == "leet"): total_cash = 1337</span><span class="token comment"># if (playername == "snoop" or playername == "weed" or playername == "kush"): total_cash = 420</span></code></pre></li></ul><p>特殊说明，<code>.import</code>文件是 Godot 引擎的导入记录，与资源内容无关，可以直接无视</p><p>根据目录的结构，我们可以针对性浏览文件，从而轻易地找到自己想要的东西 </p><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>由于我并不熟悉 Godot 的开发，文章中的介绍可能有所欠缺，有错误还麻烦在底下评论指正，而且我的设备太烂，Godot 引擎都跑不起来…</p><p>由此可见，Godot 的逆向非常容易，也非常容易被人拿来干坏事，<strong>开源是把双刃剑</strong>，我们都应该合理地运用它</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;近期网络上也是出现了一款特别火的游戏——&lt;strong&gt;Buckshot Roulette&lt;/strong&gt;，也叫恶魔轮盘赌，游戏玩法不多赘述，这里提供 Godot 引擎游戏逆向的一般方法，至于游戏中AI大哥的逻辑，B站上已经有了分析&lt;a href=&quot;https://www.bilibili.com/video/BV13z421R73V&quot;&gt;# 逆向代码解析恶魔轮盘赌！你想知道的全在这里&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;游戏是 &lt;strong&gt;Godot&lt;/strong&gt; 引擎开发的，Godot 是一个开源引擎，这意味着我们可以很容易地将其反编译，得到项目文件，以此来获得你想要的音频&amp;#x2F;图片资源，甚至对代码进行二次开发&lt;/p&gt;
&lt;p&gt;这里我们用到 Github 上一个开源项目 [&lt;a href=&quot;https://github.com/bruvzg/gdsdecomp&quot;&gt;GitHub - bruvzg&amp;#x2F;gdsdecomp: Godot reverse engineering tools&lt;/a&gt;，该程序支持反编译 Godot 4.x、3.x 和 2.x 项目&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="http://chengzi600.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="逆向" scheme="http://chengzi600.github.io/categories/%E7%BC%96%E7%A8%8B/%E9%80%86%E5%90%91/"/>
    
    
    <category term="教程" scheme="http://chengzi600.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="游戏" scheme="http://chengzi600.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>英语写作 - Spring Festival</title>
    <link href="http://chengzi600.github.io/posts/56030.html"/>
    <id>http://chengzi600.github.io/posts/56030.html</id>
    <published>2024-02-22T12:14:00.000Z</published>
    <updated>2024-02-25T06:22:20.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>仅供参考，请勿照搬</p></blockquote><p>Do you know what the Spring Festival is? It’s an traditional Chinese festival. We also call it Chinese New Year. Spring Festival falls on the first day of the first lunar month. <em>Throughout</em> thousands of years of history, there have been many customs during the Spring Festival. Do you know any of them? Let’s take a look!</p><span id="more"></span><h3 id="New-Year’s-Eve-Customs"><a href="#New-Year’s-Eve-Customs" class="headerlink" title="New Year’s Eve Customs"></a>New Year’s Eve Customs</h3><p>New Year’s Eve is a symbol of the end of the lunar year and the beginning of a new year. On this day, people always prepare to welcome the coming New Year, such as cleaning houses, preparing New Year’s goods, and setting off <em>firecrackers</em>.</p><p><em>Moreover</em>, the most important thing is having New Year’s Eve Dinner. Families see New Years Eve as a time to get together and usually celebrate with a big family meal. The main dish of this meal is almost always fish. This is because in Chinese, “fish” is a symbol of “every year, more and more”.</p><h3 id="New-Year’s-Greetings"><a href="#New-Year’s-Greetings" class="headerlink" title="New Year’s Greetings"></a>New Year’s Greetings</h3><p>On the morning of the Spring Festival, people get up early and wear new clothes. After that, people go out to visit friends and elders. Then, people greet them with “Happy New Year” , “Good health” or “Long life”. Nowadays, however, many people prefer to stay at home, so they usually send wishes to friends online.</p><h3 id="Lucky-Money"><a href="#Lucky-Money" class="headerlink" title="Lucky Money"></a>Lucky Money</h3><p>Lucky Money is also known as “hongbao”. People put money in red <em>envelopes</em> as a gift. And children usually get it from their family, as it is a symbol of long life and good luck.</p><p>All in all, the Spring Festival is an unforgettable memory and a beautiful picture of life. It is also a very important part of the Chinese culture. We should try to inherit it, shouldn’t we?</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;仅供参考，请勿照搬&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Do you know what the Spring Festival is? It’s an traditional Chinese festival. We also call it Chinese New Year. Spring Festival falls on the first day of the first lunar month. &lt;em&gt;Throughout&lt;/em&gt; thousands of years of history, there have been many customs during the Spring Festival. Do you know any of them? Let’s take a look!&lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="http://chengzi600.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="英语" scheme="http://chengzi600.github.io/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="作文" scheme="http://chengzi600.github.io/tags/%E4%BD%9C%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>我如何从零搭建 Hexo Blog 并托管到 Github Pages</title>
    <link href="http://chengzi600.github.io/posts/28473.html"/>
    <id>http://chengzi600.github.io/posts/28473.html</id>
    <published>2024-02-22T08:02:00.000Z</published>
    <updated>2024-02-25T06:22:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前尝试过自己搭建动态的 BLOG，然而光是域名+服务器的费用就是一个不小的数字。所以这次采用了一个快速、简洁且高效的博客框架 <strong>hexo</strong>，以便于将其免费托管到 Github Pages</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote><p>💻我的搭建环境：Windows 10, Node.js v18.19.0, npm v10.2.3</p></blockquote><ol><li><p>Win 10 电脑建议下载一个终端，Win 11是自带的，如果不想装也可以用Git Bash，但不建议使用CMD或者PowerShell</p></li><li><p>安装 Node.js，安装完了之后在终端输入下面的命令，如果显示出来版本号就说明好了</p></li></ol><span id="more"></span><pre class="language-none"><code class="language-none">C:\Users\15573&gt;node -vv18.19.0C:\Users\15573&gt;npm -v10.2.3</code></pre><ol start="3"><li><p>安装 Git，用于后续推送 Github</p></li><li><p>一个 Github 账号</p></li></ol><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>新建一个文件夹，右键打开终端（或点击Git Bash Here）</p><p>为了防止下载速度过慢，一直卡在<code>timing xxx</code>，建议换国内源后再操作</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org</code></pre><p>依次输入下面的命令，<code>myblog</code>可以换成任意名称</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-clihexo init myblog</code></pre><p>耐心等待初始化，完成后会在你打开终端的目录下新建<code>myblog</code>文件夹和一个json文件，我们切换到文件夹，补全hexo所需的文件</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> myblog<span class="token function">npm</span> <span class="token function">install</span></code></pre><p>接下来生成静态文件，并启动hexo服务器</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo ghexo s</code></pre><p>根据提示访问<code>localhost:4000</code>就能看到你生成的博客了</p><h3 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h3><p>让我们来熟悉一下几个重要的目录和文件</p><ul><li>node_modules: 存放依赖包以及你安装的插件</li><li>public：存放生成的页面</li><li>scaffolds：存放模板文件</li><li>source：存放文章</li><li><strong>themes：存放主题</strong></li><li><strong>_config.yml: 博客的全局配置文件</strong></li></ul><p>进入<code>_config.yml</code>编辑<code>Site</code>这部分信息</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Site</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 橙BLOG<span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'橙子的BLOG'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">'靠自己，实际一些！'</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span><span class="token key atrule">author</span><span class="token punctuation">:</span> Chengzi600<span class="token key atrule">language</span><span class="token punctuation">:</span> en<span class="token key atrule">timezone</span><span class="token punctuation">:</span> <span class="token string">''</span></code></pre><p>如果怕改坏可以先备份配置文件</p><p>用<code>Ctrl+C</code>结束hexo进程，然后使用<code>hexo s</code>重启服务器</p><p>进去看看，你会发现内容应用上去了，不过还有些内容我们需要配置主题的配置文件修改</p><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>点开<a href="https://hexo.io/themes/">Themes | Hexo</a>这个链接，寻找你喜欢的主题，这里以<a href="https://github.com/fan-lv/Fan">Fan</a>主题为例子，点进主题之后一般会进入Github对应的主题仓库，我们直接下滑看<code>README</code>文件，上面一般给出了操作方法，而且各个主题的设置方法也基本相同</p><p>clone主题（记得<code>Ctrl+C</code>关掉hexo进程）</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/fan-lv/Fan.git themes/Fan</code></pre><p>修改位于博客根目录下的 <code>_config.yml</code> 内的 <code>theme</code> 选项值为 <code>Fan</code>（在尾部的位置，找不到可以<code>Ctrl+F</code>搜索）</p><p>进入<code>.\themes\Fan</code>文件夹，这里有一个<code>_config.yml</code>文件，是主题的配置文件，我们需要在这里完成大部分配置，作者贴心地给出了注释，我们只需要按照需求将对应功能的<code>enable</code>设置为<code>true</code>或者<code>false</code>，对应个人信息参数按需求修改即可。这一步不同主题配置项有很大区别，我不多加以说明，如果有疑问可以自己查询文档，部分功能如评论可能需要去配置<code>LeanCloud</code>，建议到对应的<a href="https://valine.js.org/">Valine</a>项目仓库查看文档。希望大家能够自行完成，培养解决问题的能力</p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>由于是静态博客，文章编辑稍微复杂，推荐使用下载<code>admin</code>插件编辑</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-admin <span class="token parameter variable">--save</span></code></pre><p>因为这个插件无法跟着上传到Github上，所以无需设置密码什么的，访问<code>localhost:4000/admin</code>即可进入管理后台，界面是英语的，但是简单熟悉后便可掌握，文章的编辑、删除等操作都可以很轻易的完成，在编辑页面右上角的锯齿图标可以设置标签和分类，其他功能可自行探索，不多赘述</p><p>编辑完成后点击<code>publish</code>发布，重新生成静态文件后即可看到文章</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo g</code></pre><h3 id="上传-Github"><a href="#上传-Github" class="headerlink" title="上传 Github"></a>上传 Github</h3><ol><li><p>登录Github，新建一个仓库，注意仓库名要为<code>用户名.github.io</code>，比如我的Github ID是Chengzi600，那么仓库名为<code>Chengzi600.github.io</code></p></li><li><p>在全局配置文件中配置以下内容，repo这里改成你自己仓库的git文件</p></li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/one-command-deployment</span>deploy:  type: <span class="token function">git</span>  repo: https://github.com/Chengzi600/Chengzi600.github.io.git  branch: main</code></pre><ol start="3"><li>安装必要的依赖，来更加方便地部署</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span></code></pre><ol start="4"><li>生成静态文件后推送，期间会弹窗让你登录，按照提示授权即可</li></ol><blockquote><p>如果失败了，可能是Github连接问题，建议使用梯子</p></blockquote><blockquote><p>另外还可以配置 SSH 密钥来替代弹窗登录，这里不做说明，可以自行查询</p></blockquote><pre class="language-bash" data-language="bash"><code class="language-bash">hexo chexo ghexo d</code></pre><ol start="5"><li>过一会儿输入你的仓库名字访问，就能发现成功上传，后续如果在本地发了新文章或做别的修改，直接重复上面的代码<code>hexo c hexo g hexo d</code>即可推送到 Github</li></ol><p>Hexo 更多进阶功能，以后有空再更</p><p>如果你是纯萌新，没一点编程基础的，能做到这步真的很不容易了</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前尝试过自己搭建动态的 BLOG，然而光是域名+服务器的费用就是一个不小的数字。所以这次采用了一个快速、简洁且高效的博客框架 &lt;strong&gt;hexo&lt;/strong&gt;，以便于将其免费托管到 Github Pages&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;💻我的搭建环境：Windows 10, Node.js v18.19.0, npm v10.2.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Win 10 电脑建议下载一个终端，Win 11是自带的，如果不想装也可以用Git Bash，但不建议使用CMD或者PowerShell&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装 Node.js，安装完了之后在终端输入下面的命令，如果显示出来版本号就说明好了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="编程" scheme="http://chengzi600.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Web" scheme="http://chengzi600.github.io/categories/%E7%BC%96%E7%A8%8B/Web/"/>
    
    
    <category term="hexo" scheme="http://chengzi600.github.io/tags/hexo/"/>
    
    <category term="教程" scheme="http://chengzi600.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>这是一篇加密的测试文章</title>
    <link href="http://chengzi600.github.io/posts/28599.html"/>
    <id>http://chengzi600.github.io/posts/28599.html</id>
    <published>2024-02-18T10:00:00.000Z</published>
    <updated>2024-02-25T06:56:44.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="这个文章不能被校验">  <script id="hbeData" type="hbeData" data-hmacdigest="1b3c89233e9df57be5f8b4ae5442123d3dbd3d2f368c4e920e504365bfbafd5b">8c83c1fd70b2001f095a68c8e758fb29735fc865e69d7dd7dcb592de01f8a5499024fb108b2dfa5293e8043b7b70099b9ed9afa16c29c520f831143d00fb00b3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这篇文章被上了锁</summary>
    
    
    
    <category term="杂项" scheme="http://chengzi600.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="加密" scheme="http://chengzi600.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
</feed>
